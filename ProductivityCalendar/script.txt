Productivity Calendar Script Explanation

Overview
This script creates an interactive productivity calendar that allows users to track their productivity levels for each day of 
a selected month. Users can click on each day to set or change its productivity status, which is then saved in the 
browser's local storage.


Variables:

    -CalendarContainer: A reference to the HTML element that will hold the calendar.
    -monthSelect: A reference to the HTML <select> element that allows users to choose a month.
    -today: A Date object representing the current date.
    -currentMonth: A variable that holds the current month as a zero-based index (0 for January, 11 for December).
    -currentYear: A variable that holds the current year

Current Year Display.
The current year is displayed in the HTML by setting the text content of the currentYear paragraph element:

document.getElementById('currentYear').textContent = `Current Year: ${currentYear}`;


Months Array
An array called months is defined to store the names of the months in English. This array is used to populate the month 
selection dropdown.

const months = [
  'January', 'February', 'March', 'April', 
  'May', 'June', 'July', 'August', 
  'September', 'October', 'November', 'December'
];

Populating the Month Dropdown
The script uses a forEach loop to iterate through the months array, creating an <option> element for each month and 
appending it to the monthSelect dropdown.

months.forEach((month, index) => {
  const option = document.createElement('option');
  option.value = index; // Set the value to the month index
  option.textContent = month; // Set the displayed text to the month name
  monthSelect.appendChild(option); // Append the option to the select element
});


Function: generateCalendar
This function generates the calendar for the selected month and year. It takes month and year as parameters.

    -Clearing Previous Content: The function first clears any existing content in the calendarContainer.
    -Calculating Days in Month: It calculates the number of days in the month and the starting day of the month.
    -Creating Header Row: The function creates a header row displaying the days of the week and appends it to the calendar.
    -Creating Empty Cells: It adds empty cells to the calendar for days before the first of the month.
    -Creating Day Cells: For each day in the month, the function creates a cell, retrieves any saved productivity status from localStorage, 
and adds an event listener to allow users to click and change the productivity level.



Event Listener for Month Change
An event listener is added to the monthSelect dropdown to regenerate the calendar whenever the selected month changes. 
The current month is updated, and the generateCalendar function is called with the new values.

monthSelect.addEventListener('change', () => {
  currentMonth = parseInt(monthSelect.value); // Update current month based on dropdown selection
  generateCalendar(currentMonth, currentYear); // Regenerate calendar for selected month
});

Initial Calendar Generation
The calendar is initially generated using the current month and year. 
The dropdown is also set to reflect the current month.

monthSelect.value = currentMonth; // Set the current month in the dropdown
generateCalendar(currentMonth, currentYear); // Generate the calendar for the current month and year
